#!/bin/bash
# DNS Routing Manager - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–ª—è macOS
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ü–≤–µ—Ç–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
print_info() { echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"; }
print_success() { echo -e "${GREEN}‚úÖ $1${NC}"; }
print_warning() { echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"; }
print_error() { echo -e "${RED}‚ùå $1${NC}"; }

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–∞ macOS
check_macos() {
    if [[ "$OSTYPE" != "darwin"* ]]; then
        print_error "–≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ macOS"
        exit 1
    fi
    print_success "–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ macOS $(sw_vers -productVersion)"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
check_sudo() {
    if ! sudo -n true 2>/dev/null; then
        print_warning "–î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
        echo "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:"
        sudo -v
    fi
    print_success "–ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ–ª—É—á–µ–Ω—ã"
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew –µ—Å–ª–∏ –Ω–µ—Ç
install_homebrew() {
    if command -v brew &> /dev/null; then
        print_success "Homebrew —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return
    fi
    
    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    
    # –î–æ–±–∞–≤–ª—è–µ–º Homebrew –≤ PATH
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
    
    print_success "Homebrew —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3.12+
install_python() {
    if python3 --version 2>/dev/null | grep -E "Python 3\.(1[1-9]|[2-9][0-9])" > /dev/null; then
        print_success "Python $(python3 --version | cut -d' ' -f2) —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return
    fi
    
    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3.12..."
    brew install python@3.12
    print_success "Python —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
setup_app_directory() {
    APP_DIR="$HOME/dns-routing-manager"
    
    if [ -d "$APP_DIR" ]; then
        print_warning "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $APP_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        read -p "–£–¥–∞–ª–∏—Ç—å –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å? (y/N): " -r
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            rm -rf "$APP_DIR"
        else
            print_error "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
            exit 1
        fi
    fi
    
    print_info "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    mkdir -p "$APP_DIR"
    cd "$APP_DIR"
    print_success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $APP_DIR —Å–æ–∑–¥–∞–Ω–∞"
}

# –°–∫–∞—á–∏–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é —Å GitHub
download_app() {
    print_info "–°–∫–∞—á–∏–≤–∞–µ–º DNS Routing Manager —Å GitHub..."
    
    # –°–∫–∞—á–∏–≤–∞–µ–º –∞—Ä—Ö–∏–≤
    curl -L "https://github.com/vladburba/dns-routing-manager/archive/refs/heads/main.zip" -o dns-routing-manager.zip
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º
    unzip -q dns-routing-manager.zip
    mv dns-routing-manager-main/* .
    mv dns-routing-manager-main/.* . 2>/dev/null || true
    rm -rf dns-routing-manager-main dns-routing-manager.zip
    
    print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–∫–∞—á–∞–Ω–æ"
}

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
setup_python_environment() {
    print_info "–°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ Python..."
    python3 -m venv venv
    source venv/bin/activate
    
    print_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    pip install --upgrade pip
    pip install -r requirements.txt
    
    print_success "Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

# –°–æ–∑–¥–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Å–∫—Ä–∏–ø—Ç
create_executable() {
    print_info "–°–æ–∑–¥–∞–µ–º –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Å–∫—Ä–∏–ø—Ç..."
    
    cat > dns-routing << 'EOF'
#!/bin/bash
# DNS Routing Manager - –ó–∞–ø—É—Å–∫–∞—Ç–æ—Ä

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cd "$HOME/dns-routing-manager"

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
python3 run.py "$@"
EOF

    chmod +x dns-routing
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
    sudo ln -sf "$APP_DIR/dns-routing" /usr/local/bin/dns-routing
    
    print_success "–ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: /usr/local/bin/dns-routing"
}

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
setup_default_config() {
    print_info "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    LOCAL_INTERFACE=$(route get default | grep interface: | awk '{print $2}')
    GATEWAY=$(route get default | grep gateway: | awk '{print $2}')
    VPN_INTERFACE=$(ifconfig | grep -E "^utun[0-9]" | head -1 | cut -d: -f1)
    
    if [ -z "$VPN_INTERFACE" ]; then
        VPN_INTERFACE="utun0"  # –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    fi
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if [ -f "config/settings.yaml" ]; then
        sed -i.bak "s/interface: \".*\"/interface: \"$LOCAL_INTERFACE\"/" config/settings.yaml
        sed -i.bak "s/gateway: \".*\"/gateway: \"$GATEWAY\"/" config/settings.yaml
        sed -i.bak "s/interface: \"utun.*\"/interface: \"$VPN_INTERFACE\"/" config/settings.yaml
        rm config/settings.yaml.bak
    fi
    
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è $LOCAL_INTERFACE (gateway: $GATEWAY) –∏ $VPN_INTERFACE"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
test_installation() {
    print_info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    
    if dns-routing status &>/dev/null; then
        print_success "DNS Routing Manager —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    else
        print_warning "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –µ—Å—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è"
        print_info "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: dns-routing status"
    fi
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
show_usage_instructions() {
    echo ""
    echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
    echo ""
    echo "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "  dns-routing status                    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
    echo "  dns-routing dns resolve yandex.ru     # –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å DNS"
    echo "  dns-routing process --dry-run         # –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω–æ"
    echo "  dns-routing process --ru-only         # –û–±—Ä–∞–±–æ—Ç–∞—Ç—å .ru –¥–æ–º–µ–Ω—ã"
    echo ""
    echo "‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
    echo "  –§–∞–π–ª: $APP_DIR/config/settings.yaml"
    echo "  –î–æ–º–µ–Ω—ã: $APP_DIR/config/domains_*.txt"
    echo ""
    echo "üîß –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥ –≤–∞—à—É —Å–µ—Ç—å:"
    echo "  1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ $APP_DIR/config/settings.yaml"
    echo "  2. –£–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –∏ gateway"
    echo "  3. –î–æ–±–∞–≤—å—Ç–µ –Ω—É–∂–Ω—ã–µ –¥–æ–º–µ–Ω—ã –≤ config/domains_*.txt"
    echo ""
    echo "‚ùì –ü–æ–º–æ—â—å: dns-routing --help"
    echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/vladburba/dns-routing-manager"
    echo ""
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
main() {
    echo "üöÄ DNS Routing Manager - –£—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –¥–ª—è macOS"
    echo "==============================================="
    echo ""
    
    check_macos
    check_sudo
    install_homebrew
    install_python
    setup_app_directory
    download_app
    setup_python_environment
    create_executable
    setup_default_config
    test_installation
    show_usage_instructions
    
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'print_error "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ."' ERR

# –ó–∞–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
main "$@"
